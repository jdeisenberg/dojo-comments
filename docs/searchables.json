[{"href": "./index.html", "title": "Home", "contents": "In that last line, I don’t care about the return value from the writeFileAsUtf8Sync, so I bind it to _, which means it gets ignored.", "rendered": "In that last line, I don’t care about the return value from the <code>writeFileAsUtf8Sync</code>, so I bind it to <code>_</code>, which means it gets ignored.", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "let allLines = Node.Fs.readFileAsUtf8Sync(inFile);", "rendered": "<pre><code>let allLines = Node.Fs.readFileAsUtf8Sync(inFile);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "ReasonML has an interface to Node’s file system, written in BuckleScript. From the documentation I was able to find the readFileAsUtf8Sync() function, which reads the entire file in as a single string. This would not be a good thing to use if I had an enormous, multi-gigabyte CSV file, but for a file the size that I was dealing with, it will do. It’s a synchronous call, so I don’t have to deal with callbacks. When the program finishes, I’ll use the corresponding writeFileAsUtf8Sync() to do my output.", "rendered": "ReasonML has an interface to Node’s file system, written in BuckleScript. From <a href=\"https://bucklescript.github.io/bucklescript/api/Node.Fs.html\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\">the documentation</a> I was able to find the <code>readFileAsUtf8Sync()</code> function, which reads the entire file in as a single string. This would not be a good thing to use if I had an enormous, multi-gigabyte CSV file, but for a file the size that I was dealing with, it will do. It’s a synchronous call, so I don’t have to deal with callbacks. When the program finishes, I’ll use the corresponding <code>writeFileAsUtf8Sync()</code> to do my output.", "breadcrumb": "Home"},
{"href": "./index.html#Reading-and-Writing-Files", "title": "Reading and Writing Files", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "This is where (not for the first time during this program) I got lazy. Belt.Array.get() returns option type, and I really didn’t want to deal with that, so I went with getUnsafe(), which means that if you don’t provide enough arguments to the program, it will crash.", "rendered": "This is where (not for the first time during this program) I got lazy. <code>Belt.Array.get()</code> returns <code>option</code> type, and I really didn’t want to deal with that, so I went with <code>getUnsafe()</code>, which means that if you don’t provide enough arguments to the program, it will crash.", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "module Arr = Belt.Array;\n/* ... */\nlet args = Node.Process.argv;\nlet outFile = Arr.getUnsafe(args, Arr.length(args) - 1);\nlet inFile = Arr.getUnsafe(args, Arr.length(args) - 2);", "rendered": "<pre><code>module Arr = Belt.Array;\n/* ... */\nlet args = Node.Process.argv;\nlet outFile = Arr.getUnsafe(args, Arr.length(args) - 1);\nlet inFile = Arr.getUnsafe(args, Arr.length(args) - 2);</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Looking at the documentation for Node.process.argv lets me read an array of  command line arguments. The last element is the output file name, and the next to last is the input file name. Current best practice in ReasonML is to use the Belt.Array module to manipulate arrays. I suspected I would be doing a lot of calls to functions from that module, and I didn’t want to type Belt.Array all the time, so I used a module alias at the top of my code:", "rendered": "Looking at the documentation for <a href=\"https://nodejs.org/docs/latest/api/process.html#process_process_argv\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\"><code>Node.process.argv</code></a> lets me read an array of  command line arguments. The last element is the output file name, and the next to last is the input file name. Current best practice in ReasonML is to use the <code>Belt.Array</code> module to manipulate arrays. I suspected I would be doing a lot of calls to functions from that module, and I didn’t want to type <code>Belt.Array</code> all the time, so I used a module alias at the top of my code:", "breadcrumb": "Home"},
{"href": "./index.html#Reading-Command-Line-Arguments", "title": "Reading Command Line Arguments", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "code block", "contents": "node src/DojoComments.bs.js inputfile.csv outputfile.html", "rendered": "<pre><code>node src/DojoComments.bs.js inputfile.csv outputfile.html</code></pre>", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Here’s my plan for the program, which I run from the command line as follows:", "rendered": "Here’s my plan for the program, which I run from the command line as follows:", "breadcrumb": "Home"},
{"href": "./index.html#The-Big-Picture", "title": "The Big Picture", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "The problem is that you have to scroll horizontally to read the spreadsheet, and it’s not pleasant to read in any event. I decided to export the spreadsheet as CSV, then write a program in ReasonML to convert the CSV to a somewhat more readable HTML form. I learned a lot of things writing this, and I’ll share them with you here.", "rendered": "The problem is that you have to scroll horizontally to read the spreadsheet, and it’s not pleasant to read in any event. I decided to <a href=\"/home/david/reasonlab/dojo-comments/docs/feedback.csv\" title=\"\">export the spreadsheet as CSV</a>, then write a program in ReasonML to convert the CSV to a <a href=\"/home/david/reasonlab/dojo-comments/docs/europe_dojo_feedback.html\" title=\"\">somewhat more readable HTML form</a>. I learned a lot of things writing this, and I’ll share them with you here.", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "screenshot showing spreadsheet with horizontal scrolling", "rendered": "<img src='google_doc_screenshot.png' alt='screenshot showing spreadsheet with horizontal scrolling' />", "breadcrumb": "Home"},
{"href": "./index.html", "title": "Home", "contents": "Recently, @bsansouci organized a ReasonML dojo that was held simultaneously in several locations in Europe. He provided a feedback form for attendees, and put the results in a Google document, which looks like this:", "rendered": "Recently, <a href=\"https://github.com/bsansouci\" target=\"_blank\" rel=\"noopener nofollow\" title=\"\" class=\"external-link\">@bsansouci</a> organized a ReasonML dojo that was held simultaneously in several locations in Europe. He provided a feedback form for attendees, and put the results in a Google document, which looks like this:", "breadcrumb": "Home"},
{"href": "./index.html#Converting-CSV-to-HTML", "title": "Converting CSV to HTML", "contents": "", "rendered": "", "breadcrumb": "Home"},
{"href": "./api/DojoComments.html#value-htmlString", "title": "htmlString", "contents": "htmlString string", "rendered": "<h4 class='item'>let htmlString: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-htmlHeader", "title": "htmlHeader", "contents": "htmlHeader string", "rendered": "<h4 class='item'>let htmlHeader: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-headers", "title": "headers", "contents": "headers array string", "rendered": "<h4 class='item'>let headers: array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-parseData", "title": "parseData", "contents": "parseData array array string", "rendered": "<h4 class='item'>let parseData: array(array(string))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-allLines", "title": "allLines", "contents": "allLines string", "rendered": "<h4 class='item'>let allLines: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-inFile", "title": "inFile", "contents": "inFile string", "rendered": "<h4 class='item'>let inFile: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-outFile", "title": "outFile", "contents": "outFile string", "rendered": "<h4 class='item'>let outFile: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-args", "title": "args", "contents": "args array string", "rendered": "<h4 class='item'>let args: array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-processRows", "title": "processRows", "contents": "processRows array string array array string string  ", "rendered": "<h4 class='item'>let processRows: (\n  array(string),\n  array(array(string))\n) => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-createDefnList", "title": "createDefnList", "contents": "createDefnList array string array string string  ", "rendered": "<h4 class='item'>let createDefnList: (array(string), array(string)) => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-processText", "title": "processText", "contents": "processText string string ", "rendered": "<h4 class='item'>let processText: string => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-escapeHTML", "title": "escapeHTML", "contents": "escapeHTML string string ", "rendered": "<h4 class='item'>let escapeHTML: string => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-arraySplitAt", "title": "arraySplitAt", "contents": "arraySplitAt int array array array  ", "rendered": "<h4 class='item'>let arraySplitAt: (int, array('a)) => (array('a), array('a))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-parse", "title": "parse", "contents": "parse string Results t ", "rendered": "<h4 class='item'>let parse: string => <a href=\"./api/DojoComments.html#module-Results\">Results</a>.<a href=\"./api/DojoComments.html#type-Results.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.meta", "title": "Results.meta", "contents": "meta t Meta t ", "rendered": "<h4 class='item'>let meta: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => <a href=\"./api/DojoComments.html#module-Meta\">Meta</a>.<a href=\"./api/DojoComments.html#type-Meta.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.error", "title": "Results.error", "contents": "error t array Error t ", "rendered": "<h4 class='item'>let error: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => array(<a href=\"./api/DojoComments.html#module-Error\">Error</a>.<a href=\"./api/DojoComments.html#type-Error.t\">t</a>)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.data", "title": "Results.data", "contents": "data t array array string ", "rendered": "<h4 class='item'>let data: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => array(array(string))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.t", "title": "Results.t", "contents": "t array array string array Error t Meta t t data error meta", "rendered": "<h4 class='item'>let t: (\n  ~data: array(array(string)),\n  ~error: array(<a href=\"./api/DojoComments.html#module-Error\">Error</a>.<a href=\"./api/DojoComments.html#type-Error.t\">t</a>),\n  ~meta: <a href=\"./api/DojoComments.html#module-Meta\">Meta</a>.<a href=\"./api/DojoComments.html#type-Meta.t\">t</a>\n) => <a href=\"./api/DojoComments.html#type-Results.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Results.t", "title": "Results.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.truncated", "title": "Meta.truncated", "contents": "truncated t bool ", "rendered": "<h4 class='item'>let truncated: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => bool</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.fields", "title": "Meta.fields", "contents": "fields t array string ", "rendered": "<h4 class='item'>let fields: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.aborted", "title": "Meta.aborted", "contents": "aborted t bool ", "rendered": "<h4 class='item'>let aborted: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => bool</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.linebreak", "title": "Meta.linebreak", "contents": "linebreak t string ", "rendered": "<h4 class='item'>let linebreak: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.delimiter", "title": "Meta.delimiter", "contents": "delimiter t string ", "rendered": "<h4 class='item'>let delimiter: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.t", "title": "Meta.t", "contents": "t string string bool array string bool t delimiter linebreak aborted fields truncated", "rendered": "<h4 class='item'>let t: (\n  ~delimiter: string,\n  ~linebreak: string,\n  ~aborted: bool,\n  ~fields: array(string),\n  ~truncated: bool\n) => <a href=\"./api/DojoComments.html#type-Meta.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Meta.t", "title": "Meta.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.row", "title": "Error.row", "contents": "row t int ", "rendered": "<h4 class='item'>let row: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => int</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.message", "title": "Error.message", "contents": "message t string ", "rendered": "<h4 class='item'>let message: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.code", "title": "Error.code", "contents": "code t string ", "rendered": "<h4 class='item'>let code: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.type_", "title": "Error.type_", "contents": "type_ t string ", "rendered": "<h4 class='item'>let type_: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.t", "title": "Error.t", "contents": "t string string string int t type_ code message row", "rendered": "<h4 class='item'>let t: (\n  ~type_: string,\n  ~code: string,\n  ~message: string,\n  ~row: int\n) => <a href=\"./api/DojoComments.html#type-Error.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Error.t", "title": "Error.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html", "title": "DojoComments", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html", "title": "DojoComments", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#DojoComments", "title": "DojoComments", "contents": "", "rendered": "", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-htmlString", "title": "htmlString", "contents": "htmlString string", "rendered": "<h4 class='item'>let htmlString: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-htmlHeader", "title": "htmlHeader", "contents": "htmlHeader string", "rendered": "<h4 class='item'>let htmlHeader: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-headers", "title": "headers", "contents": "headers array string", "rendered": "<h4 class='item'>let headers: array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-parseData", "title": "parseData", "contents": "parseData array array string", "rendered": "<h4 class='item'>let parseData: array(array(string))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-allLines", "title": "allLines", "contents": "allLines string", "rendered": "<h4 class='item'>let allLines: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-inFile", "title": "inFile", "contents": "inFile string", "rendered": "<h4 class='item'>let inFile: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-outFile", "title": "outFile", "contents": "outFile string", "rendered": "<h4 class='item'>let outFile: string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-args", "title": "args", "contents": "args array string", "rendered": "<h4 class='item'>let args: array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-processRows", "title": "processRows", "contents": "processRows array string array array string string  ", "rendered": "<h4 class='item'>let processRows: (\n  array(string),\n  array(array(string))\n) => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-createDefnList", "title": "createDefnList", "contents": "createDefnList array string array string string  ", "rendered": "<h4 class='item'>let createDefnList: (array(string), array(string)) => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-processText", "title": "processText", "contents": "processText string string ", "rendered": "<h4 class='item'>let processText: string => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-escapeHTML", "title": "escapeHTML", "contents": "escapeHTML string string ", "rendered": "<h4 class='item'>let escapeHTML: string => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-arraySplitAt", "title": "arraySplitAt", "contents": "arraySplitAt int array array array  ", "rendered": "<h4 class='item'>let arraySplitAt: (int, array('a)) => (array('a), array('a))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-parse", "title": "parse", "contents": "parse string Results t ", "rendered": "<h4 class='item'>let parse: string => <a href=\"./api/DojoComments.html#module-Results\">Results</a>.<a href=\"./api/DojoComments.html#type-Results.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.meta", "title": "Results.meta", "contents": "meta t Meta t ", "rendered": "<h4 class='item'>let meta: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => <a href=\"./api/DojoComments.html#module-Meta\">Meta</a>.<a href=\"./api/DojoComments.html#type-Meta.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.error", "title": "Results.error", "contents": "error t array Error t ", "rendered": "<h4 class='item'>let error: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => array(<a href=\"./api/DojoComments.html#module-Error\">Error</a>.<a href=\"./api/DojoComments.html#type-Error.t\">t</a>)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.data", "title": "Results.data", "contents": "data t array array string ", "rendered": "<h4 class='item'>let data: <a href=\"./api/DojoComments.html#type-Results.t\">t</a> => array(array(string))</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Results.t", "title": "Results.t", "contents": "t array array string array Error t Meta t t data error meta", "rendered": "<h4 class='item'>let t: (\n  ~data: array(array(string)),\n  ~error: array(<a href=\"./api/DojoComments.html#module-Error\">Error</a>.<a href=\"./api/DojoComments.html#type-Error.t\">t</a>),\n  ~meta: <a href=\"./api/DojoComments.html#module-Meta\">Meta</a>.<a href=\"./api/DojoComments.html#type-Meta.t\">t</a>\n) => <a href=\"./api/DojoComments.html#type-Results.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Results.t", "title": "Results.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Results", "title": "Results", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.truncated", "title": "Meta.truncated", "contents": "truncated t bool ", "rendered": "<h4 class='item'>let truncated: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => bool</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.fields", "title": "Meta.fields", "contents": "fields t array string ", "rendered": "<h4 class='item'>let fields: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => array(string)</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.aborted", "title": "Meta.aborted", "contents": "aborted t bool ", "rendered": "<h4 class='item'>let aborted: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => bool</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.linebreak", "title": "Meta.linebreak", "contents": "linebreak t string ", "rendered": "<h4 class='item'>let linebreak: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.delimiter", "title": "Meta.delimiter", "contents": "delimiter t string ", "rendered": "<h4 class='item'>let delimiter: <a href=\"./api/DojoComments.html#type-Meta.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Meta.t", "title": "Meta.t", "contents": "t string string bool array string bool t delimiter linebreak aborted fields truncated", "rendered": "<h4 class='item'>let t: (\n  ~delimiter: string,\n  ~linebreak: string,\n  ~aborted: bool,\n  ~fields: array(string),\n  ~truncated: bool\n) => <a href=\"./api/DojoComments.html#type-Meta.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Meta.t", "title": "Meta.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Meta", "title": "Meta", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.row", "title": "Error.row", "contents": "row t int ", "rendered": "<h4 class='item'>let row: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => int</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.message", "title": "Error.message", "contents": "message t string ", "rendered": "<h4 class='item'>let message: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.code", "title": "Error.code", "contents": "code t string ", "rendered": "<h4 class='item'>let code: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.type_", "title": "Error.type_", "contents": "type_ t string ", "rendered": "<h4 class='item'>let type_: <a href=\"./api/DojoComments.html#type-Error.t\">t</a> => string</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#value-Error.t", "title": "Error.t", "contents": "t string string string int t type_ code message row", "rendered": "<h4 class='item'>let t: (\n  ~type_: string,\n  ~code: string,\n  ~message: string,\n  ~row: int\n) => <a href=\"./api/DojoComments.html#type-Error.t\">t</a></h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#type-Error.t", "title": "Error.t", "contents": "t ", "rendered": "<h4 class='item'>type t</h4>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#module-Error", "title": "Error", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html", "title": "DojoComments", "contents": "@rest", "rendered": "@rest", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html", "title": "DojoComments", "contents": "This module does not have a toplevel documentation block.", "rendered": "<span class='missing'>This module does not have a toplevel documentation block.</span>", "breadcrumb": "DojoComments"},
{"href": "./api/DojoComments.html#DojoComments", "title": "DojoComments", "contents": "", "rendered": "", "breadcrumb": "DojoComments"}]